// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: search_goods.proto

// option go_package = "github.com/justontheroad/go-go/go-go.grpc/searchgoods";

package searchgoods

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required string sku  = 1; // Required fields are not allowed in proto3.
	// This file contains proto3 optional fields, but --experimental_allow_proto3_optional was not set.
	Sku *string `protobuf:"bytes,1,opt,name=sku,proto3,oneof" json:"sku,omitempty"`
	Id  *int32  `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_search_goods_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

func (x *SearchRequest) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sku  string `protobuf:"bytes,2,opt,name=sku,proto3" json:"sku,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_search_goods_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchResponse) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *SearchResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_search_goods_proto protoreflect.FileDescriptor

var file_search_goods_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x22, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x46, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b,
	0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa6, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x45, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x46, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_goods_proto_rawDescOnce sync.Once
	file_search_goods_proto_rawDescData = file_search_goods_proto_rawDesc
)

func file_search_goods_proto_rawDescGZIP() []byte {
	file_search_goods_proto_rawDescOnce.Do(func() {
		file_search_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_goods_proto_rawDescData)
	})
	return file_search_goods_proto_rawDescData
}

var file_search_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_search_goods_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),  // 0: searchgoods.SearchRequest
	(*SearchResponse)(nil), // 1: searchgoods.SearchResponse
}
var file_search_goods_proto_depIdxs = []int32{
	0, // 0: searchgoods.SearchGoods.Search:input_type -> searchgoods.SearchRequest
	0, // 1: searchgoods.SearchGoods.List:input_type -> searchgoods.SearchRequest
	0, // 2: searchgoods.SearchGoods.Record:input_type -> searchgoods.SearchRequest
	0, // 3: searchgoods.SearchGoods.Route:input_type -> searchgoods.SearchRequest
	1, // 4: searchgoods.SearchGoods.Search:output_type -> searchgoods.SearchResponse
	1, // 5: searchgoods.SearchGoods.List:output_type -> searchgoods.SearchResponse
	1, // 6: searchgoods.SearchGoods.Record:output_type -> searchgoods.SearchResponse
	1, // 7: searchgoods.SearchGoods.Route:output_type -> searchgoods.SearchResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_search_goods_proto_init() }
func file_search_goods_proto_init() {
	if File_search_goods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_search_goods_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_goods_proto_goTypes,
		DependencyIndexes: file_search_goods_proto_depIdxs,
		MessageInfos:      file_search_goods_proto_msgTypes,
	}.Build()
	File_search_goods_proto = out.File
	file_search_goods_proto_rawDesc = nil
	file_search_goods_proto_goTypes = nil
	file_search_goods_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchGoodsClient is the client API for SearchGoods service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchGoodsClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	List(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (SearchGoods_ListClient, error)
	Record(ctx context.Context, opts ...grpc.CallOption) (SearchGoods_RecordClient, error)
	Route(ctx context.Context, opts ...grpc.CallOption) (SearchGoods_RouteClient, error)
}

type searchGoodsClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchGoodsClient(cc grpc.ClientConnInterface) SearchGoodsClient {
	return &searchGoodsClient{cc}
}

func (c *searchGoodsClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/searchgoods.SearchGoods/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchGoodsClient) List(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (SearchGoods_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchGoods_serviceDesc.Streams[0], "/searchgoods.SearchGoods/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchGoodsListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SearchGoods_ListClient interface {
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchGoodsListClient struct {
	grpc.ClientStream
}

func (x *searchGoodsListClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchGoodsClient) Record(ctx context.Context, opts ...grpc.CallOption) (SearchGoods_RecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchGoods_serviceDesc.Streams[1], "/searchgoods.SearchGoods/Record", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchGoodsRecordClient{stream}
	return x, nil
}

type SearchGoods_RecordClient interface {
	Send(*SearchRequest) error
	CloseAndRecv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchGoodsRecordClient struct {
	grpc.ClientStream
}

func (x *searchGoodsRecordClient) Send(m *SearchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchGoodsRecordClient) CloseAndRecv() (*SearchResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchGoodsClient) Route(ctx context.Context, opts ...grpc.CallOption) (SearchGoods_RouteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchGoods_serviceDesc.Streams[2], "/searchgoods.SearchGoods/Route", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchGoodsRouteClient{stream}
	return x, nil
}

type SearchGoods_RouteClient interface {
	Send(*SearchRequest) error
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchGoodsRouteClient struct {
	grpc.ClientStream
}

func (x *searchGoodsRouteClient) Send(m *SearchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchGoodsRouteClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SearchGoodsServer is the server API for SearchGoods service.
type SearchGoodsServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	List(*SearchRequest, SearchGoods_ListServer) error
	Record(SearchGoods_RecordServer) error
	Route(SearchGoods_RouteServer) error
}

// UnimplementedSearchGoodsServer can be embedded to have forward compatible implementations.
type UnimplementedSearchGoodsServer struct {
}

func (*UnimplementedSearchGoodsServer) Search(context.Context, *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedSearchGoodsServer) List(*SearchRequest, SearchGoods_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSearchGoodsServer) Record(SearchGoods_RecordServer) error {
	return status.Errorf(codes.Unimplemented, "method Record not implemented")
}
func (*UnimplementedSearchGoodsServer) Route(SearchGoods_RouteServer) error {
	return status.Errorf(codes.Unimplemented, "method Route not implemented")
}

func RegisterSearchGoodsServer(s *grpc.Server, srv SearchGoodsServer) {
	s.RegisterService(&_SearchGoods_serviceDesc, srv)
}

func _SearchGoods_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchGoodsServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/searchgoods.SearchGoods/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchGoodsServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchGoods_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SearchGoodsServer).List(m, &searchGoodsListServer{stream})
}

type SearchGoods_ListServer interface {
	Send(*SearchResponse) error
	grpc.ServerStream
}

type searchGoodsListServer struct {
	grpc.ServerStream
}

func (x *searchGoodsListServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SearchGoods_Record_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchGoodsServer).Record(&searchGoodsRecordServer{stream})
}

type SearchGoods_RecordServer interface {
	SendAndClose(*SearchResponse) error
	Recv() (*SearchRequest, error)
	grpc.ServerStream
}

type searchGoodsRecordServer struct {
	grpc.ServerStream
}

func (x *searchGoodsRecordServer) SendAndClose(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchGoodsRecordServer) Recv() (*SearchRequest, error) {
	m := new(SearchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SearchGoods_Route_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchGoodsServer).Route(&searchGoodsRouteServer{stream})
}

type SearchGoods_RouteServer interface {
	Send(*SearchResponse) error
	Recv() (*SearchRequest, error)
	grpc.ServerStream
}

type searchGoodsRouteServer struct {
	grpc.ServerStream
}

func (x *searchGoodsRouteServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchGoodsRouteServer) Recv() (*SearchRequest, error) {
	m := new(SearchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SearchGoods_serviceDesc = grpc.ServiceDesc{
	ServiceName: "searchgoods.SearchGoods",
	HandlerType: (*SearchGoodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _SearchGoods_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _SearchGoods_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Record",
			Handler:       _SearchGoods_Record_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Route",
			Handler:       _SearchGoods_Route_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "search_goods.proto",
}
